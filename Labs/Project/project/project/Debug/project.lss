
project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000932  000009c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000932  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800114  00800114  000009da  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001510  00000000  00000000  00000b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b74  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ac7  00000000  00000000  00002c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c8  00000000  00000000  000036c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e3  00000000  00000000  00003990  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000099c  00000000  00000000  00003f73  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  0000490f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 82 00 	jmp	0x104	; 0x104 <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 ca 01 	jmp	0x394	; 0x394 <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 b3 00 	jmp	0x166	; 0x166 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e3       	ldi	r30, 0x32	; 50
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e1       	ldi	r26, 0x14	; 20
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 31       	cpi	r26, 0x1F	; 31
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9f 01 	call	0x33e	; 0x33e <main>
  9e:	0c 94 97 04 	jmp	0x92e	; 0x92e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <deltatime_init>:
uint16_t us_deltatime = 0;


void deltatime_init(void)
{
	GPIO_config_output(&DDRB, trigger);
  a6:	62 e0       	ldi	r22, 0x02	; 2
  a8:	84 e2       	ldi	r24, 0x24	; 36
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	0e 94 d7 00 	call	0x1ae	; 0x1ae <GPIO_config_output>
  b0:	08 95       	ret

000000b2 <count_deltatime>:
}

uint16_t count_deltatime()
{
	GPIO_write_high(&PORTB, trigger);
  b2:	62 e0       	ldi	r22, 0x02	; 2
  b4:	85 e2       	ldi	r24, 0x25	; 37
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <GPIO_write_high>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  bc:	85 e3       	ldi	r24, 0x35	; 53
  be:	8a 95       	dec	r24
  c0:	f1 f7       	brne	.-4      	; 0xbe <count_deltatime+0xc>
  c2:	00 00       	nop
	_delay_us(10);
	GPIO_write_low(&PORTB, trigger);
  c4:	62 e0       	ldi	r22, 0x02	; 2
  c6:	85 e2       	ldi	r24, 0x25	; 37
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <GPIO_write_low>
	TIM0_overflow_16u();
  ce:	85 b5       	in	r24, 0x25	; 37
  d0:	89 7f       	andi	r24, 0xF9	; 249
  d2:	85 bd       	out	0x25, r24	; 37
  d4:	85 b5       	in	r24, 0x25	; 37
  d6:	81 60       	ori	r24, 0x01	; 1
  d8:	85 bd       	out	0x25, r24	; 37
	
	EICRA |= (1 << ISC00);
  da:	e9 e6       	ldi	r30, 0x69	; 105
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	81 60       	ori	r24, 0x01	; 1
  e2:	80 83       	st	Z, r24
	PCICR |= (1 << PCIE2);
  e4:	e8 e6       	ldi	r30, 0x68	; 104
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	80 83       	st	Z, r24
	PCMSK2 |= (1 << PCINT16);
  ee:	ed e6       	ldi	r30, 0x6D	; 109
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	81 60       	ori	r24, 0x01	; 1
  f6:	80 83       	st	Z, r24
	sei();
  f8:	78 94       	sei
	return us_deltatime;
}
  fa:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
  fe:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 102:	08 95       	ret

00000104 <__vector_5>:

ISR(PCINT2_vect)
{
 104:	1f 92       	push	r1
 106:	0f 92       	push	r0
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	0f 92       	push	r0
 10c:	11 24       	eor	r1, r1
 10e:	8f 93       	push	r24
 110:	9f 93       	push	r25
 112:	ef 93       	push	r30
 114:	ff 93       	push	r31
	if(PIND & (1 << echo))
 116:	48 9b       	sbis	0x09, 0	; 9
 118:	06 c0       	rjmp	.+12     	; 0x126 <__vector_5+0x22>
	{
		TIM0_overflow_interrupt_enable();
 11a:	ee e6       	ldi	r30, 0x6E	; 110
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	80 81       	ld	r24, Z
 120:	81 60       	ori	r24, 0x01	; 1
 122:	80 83       	st	Z, r24
 124:	17 c0       	rjmp	.+46     	; 0x154 <__vector_5+0x50>
	}
	else
	{
		TIM0_overflow_interrupt_disable();
 126:	ee e6       	ldi	r30, 0x6E	; 110
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	8e 7f       	andi	r24, 0xFE	; 254
 12e:	80 83       	st	Z, r24
		us_deltatime = currentTime*16;
 130:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <currentTime>
 134:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <currentTime+0x1>
 138:	82 95       	swap	r24
 13a:	92 95       	swap	r25
 13c:	90 7f       	andi	r25, 0xF0	; 240
 13e:	98 27       	eor	r25, r24
 140:	80 7f       	andi	r24, 0xF0	; 240
 142:	98 27       	eor	r25, r24
 144:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 148:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
		currentTime = 0;
 14c:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <currentTime+0x1>
 150:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <currentTime>
	}
}
 154:	ff 91       	pop	r31
 156:	ef 91       	pop	r30
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	0f 90       	pop	r0
 15e:	0f be       	out	0x3f, r0	; 63
 160:	0f 90       	pop	r0
 162:	1f 90       	pop	r1
 164:	18 95       	reti

00000166 <__vector_16>:

ISR(TIMER0_OVF_vect)
{
 166:	1f 92       	push	r1
 168:	0f 92       	push	r0
 16a:	0f b6       	in	r0, 0x3f	; 63
 16c:	0f 92       	push	r0
 16e:	11 24       	eor	r1, r1
 170:	2f 93       	push	r18
 172:	8f 93       	push	r24
 174:	9f 93       	push	r25
	currentTime++;
 176:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <currentTime>
 17a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <currentTime+0x1>
 17e:	01 96       	adiw	r24, 0x01	; 1
	// resets when time is over 25ms
	if(currentTime > 1563)
 180:	8c 31       	cpi	r24, 0x1C	; 28
 182:	26 e0       	ldi	r18, 0x06	; 6
 184:	92 07       	cpc	r25, r18
 186:	28 f4       	brcc	.+10     	; 0x192 <__vector_16+0x2c>
	}
}

ISR(TIMER0_OVF_vect)
{
	currentTime++;
 188:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <currentTime+0x1>
 18c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <currentTime>
 190:	06 c0       	rjmp	.+12     	; 0x19e <__vector_16+0x38>
	// resets when time is over 25ms
	if(currentTime > 1563)
	{
		currentTime = 1563;
 192:	8b e1       	ldi	r24, 0x1B	; 27
 194:	96 e0       	ldi	r25, 0x06	; 6
 196:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <currentTime+0x1>
 19a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <currentTime>
		
	}	
 19e:	9f 91       	pop	r25
 1a0:	8f 91       	pop	r24
 1a2:	2f 91       	pop	r18
 1a4:	0f 90       	pop	r0
 1a6:	0f be       	out	0x3f, r0	; 63
 1a8:	0f 90       	pop	r0
 1aa:	1f 90       	pop	r1
 1ac:	18 95       	reti

000001ae <GPIO_config_output>:
/*--------------------------------------------------------------------*/
void GPIO_config_input_pullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
    *reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
    *reg_name++;                    // Change pointer to Data Register
    *reg_name = *reg_name | (1<<pin_num);   // Data Register
 1ae:	fc 01       	movw	r30, r24
 1b0:	40 81       	ld	r20, Z
 1b2:	21 e0       	ldi	r18, 0x01	; 1
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <GPIO_config_output+0xe>
 1b8:	22 0f       	add	r18, r18
 1ba:	33 1f       	adc	r19, r19
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <GPIO_config_output+0xa>
 1c0:	24 2b       	or	r18, r20
 1c2:	20 83       	st	Z, r18
 1c4:	08 95       	ret

000001c6 <GPIO_write_low>:
}

/*--------------------------------------------------------------------*/
void GPIO_write_low(volatile uint8_t *reg_name, uint8_t pin_num)
{
 1c6:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);
 1c8:	90 81       	ld	r25, Z
 1ca:	21 e0       	ldi	r18, 0x01	; 1
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <GPIO_write_low+0xe>
 1d0:	22 0f       	add	r18, r18
 1d2:	33 1f       	adc	r19, r19
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <GPIO_write_low+0xa>
 1d8:	20 95       	com	r18
 1da:	29 23       	and	r18, r25
 1dc:	20 83       	st	Z, r18
 1de:	08 95       	ret

000001e0 <GPIO_write_high>:

/*--------------------------------------------------------------------*/
/* GPIO_write_high */
void GPIO_write_high(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name |= (1<<pin_num);
 1e0:	fc 01       	movw	r30, r24
 1e2:	40 81       	ld	r20, Z
 1e4:	21 e0       	ldi	r18, 0x01	; 1
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <GPIO_write_high+0xe>
 1ea:	22 0f       	add	r18, r18
 1ec:	33 1f       	adc	r19, r19
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <GPIO_write_high+0xa>
 1f2:	24 2b       	or	r18, r20
 1f4:	20 83       	st	Z, r18
 1f6:	08 95       	ret

000001f8 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) )
    {
        lcd_putc(c);
    }
}/* lcd_puts_p */
 1f8:	29 9a       	sbi	0x05, 1	; 5
 1fa:	85 e0       	ldi	r24, 0x05	; 5
 1fc:	8a 95       	dec	r24
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <toggle_e+0x4>
 200:	00 00       	nop
 202:	29 98       	cbi	0x05, 1	; 5
 204:	08 95       	ret

00000206 <lcd_write>:
 206:	cf 93       	push	r28
 208:	c8 2f       	mov	r28, r24
 20a:	66 23       	and	r22, r22
 20c:	11 f0       	breq	.+4      	; 0x212 <lcd_write+0xc>
 20e:	28 9a       	sbi	0x05, 0	; 5
 210:	01 c0       	rjmp	.+2      	; 0x214 <lcd_write+0xe>
 212:	28 98       	cbi	0x05, 0	; 5
 214:	54 9a       	sbi	0x0a, 4	; 10
 216:	55 9a       	sbi	0x0a, 5	; 10
 218:	56 9a       	sbi	0x0a, 6	; 10
 21a:	57 9a       	sbi	0x0a, 7	; 10
 21c:	5f 98       	cbi	0x0b, 7	; 11
 21e:	5e 98       	cbi	0x0b, 6	; 11
 220:	5d 98       	cbi	0x0b, 5	; 11
 222:	5c 98       	cbi	0x0b, 4	; 11
 224:	cc 23       	and	r28, r28
 226:	0c f4       	brge	.+2      	; 0x22a <lcd_write+0x24>
 228:	5f 9a       	sbi	0x0b, 7	; 11
 22a:	c6 fd       	sbrc	r28, 6
 22c:	5e 9a       	sbi	0x0b, 6	; 11
 22e:	c5 fd       	sbrc	r28, 5
 230:	5d 9a       	sbi	0x0b, 5	; 11
 232:	c4 fd       	sbrc	r28, 4
 234:	5c 9a       	sbi	0x0b, 4	; 11
 236:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <toggle_e>
 23a:	5f 98       	cbi	0x0b, 7	; 11
 23c:	5e 98       	cbi	0x0b, 6	; 11
 23e:	5d 98       	cbi	0x0b, 5	; 11
 240:	5c 98       	cbi	0x0b, 4	; 11
 242:	c3 fd       	sbrc	r28, 3
 244:	5f 9a       	sbi	0x0b, 7	; 11
 246:	c2 fd       	sbrc	r28, 2
 248:	5e 9a       	sbi	0x0b, 6	; 11
 24a:	c1 fd       	sbrc	r28, 1
 24c:	5d 9a       	sbi	0x0b, 5	; 11
 24e:	c0 fd       	sbrc	r28, 0
 250:	5c 9a       	sbi	0x0b, 4	; 11
 252:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <toggle_e>
 256:	5c 9a       	sbi	0x0b, 4	; 11
 258:	5d 9a       	sbi	0x0b, 5	; 11
 25a:	5e 9a       	sbi	0x0b, 6	; 11
 25c:	5f 9a       	sbi	0x0b, 7	; 11
 25e:	87 eb       	ldi	r24, 0xB7	; 183
 260:	9b e0       	ldi	r25, 0x0B	; 11
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <lcd_write+0x5c>
 266:	00 c0       	rjmp	.+0      	; 0x268 <lcd_write+0x62>
 268:	00 00       	nop
 26a:	cf 91       	pop	r28
 26c:	08 95       	ret

0000026e <lcd_command>:
 26e:	60 e0       	ldi	r22, 0x00	; 0
 270:	0e 94 03 01 	call	0x206	; 0x206 <lcd_write>
 274:	08 95       	ret

00000276 <lcd_gotoxy>:
 276:	61 11       	cpse	r22, r1
 278:	04 c0       	rjmp	.+8      	; 0x282 <lcd_gotoxy+0xc>
 27a:	80 58       	subi	r24, 0x80	; 128
 27c:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_command>
 280:	08 95       	ret
 282:	80 54       	subi	r24, 0x40	; 64
 284:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_command>
 288:	08 95       	ret

0000028a <lcd_clrscr>:
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_command>
 290:	08 95       	ret

00000292 <lcd_putc>:
 292:	61 e0       	ldi	r22, 0x01	; 1
 294:	0e 94 03 01 	call	0x206	; 0x206 <lcd_write>
 298:	08 95       	ret

0000029a <lcd_puts>:
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
 29e:	ec 01       	movw	r28, r24
 2a0:	21 96       	adiw	r28, 0x01	; 1
 2a2:	fc 01       	movw	r30, r24
 2a4:	80 81       	ld	r24, Z
 2a6:	88 23       	and	r24, r24
 2a8:	29 f0       	breq	.+10     	; 0x2b4 <lcd_puts+0x1a>
 2aa:	0e 94 49 01 	call	0x292	; 0x292 <lcd_putc>
 2ae:	89 91       	ld	r24, Y+
 2b0:	81 11       	cpse	r24, r1
 2b2:	fb cf       	rjmp	.-10     	; 0x2aa <lcd_puts+0x10>
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	08 95       	ret

000002ba <lcd_init>:
*                  LCD_DISP_ON_CURSOR      display on, cursor on
*                  LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
*  Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 2ba:	cf 93       	push	r28
 2bc:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 2be:	20 9a       	sbi	0x04, 0	; 4
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 2c0:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 2c2:	21 9a       	sbi	0x04, 1	; 4
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 2c4:	54 9a       	sbi	0x0a, 4	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 2c6:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 2c8:	56 9a       	sbi	0x0a, 6	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 2ca:	57 9a       	sbi	0x0a, 7	; 10
 2cc:	8f ef       	ldi	r24, 0xFF	; 255
 2ce:	99 ef       	ldi	r25, 0xF9	; 249
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <lcd_init+0x16>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <lcd_init+0x1c>
 2d6:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP); /* wait 16ms or more after power-on       */

    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN); // LCD_FUNCTION>>4;
 2d8:	5d 9a       	sbi	0x0b, 5	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN); // LCD_FUNCTION_8BIT>>4;
 2da:	5c 9a       	sbi	0x0b, 4	; 11
    lcd_e_toggle();
 2dc:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <toggle_e>
 2e0:	8f e1       	ldi	r24, 0x1F	; 31
 2e2:	9e e4       	ldi	r25, 0x4E	; 78
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <lcd_init+0x2a>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <lcd_init+0x30>
 2ea:	00 00       	nop
    delay(LCD_DELAY_INIT); /* delay, busy flag can't be checked here */

    /* repeat last command */
    lcd_e_toggle();
 2ec:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <toggle_e>
 2f0:	8f ef       	ldi	r24, 0xFF	; 255
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	01 97       	sbiw	r24, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <lcd_init+0x3a>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <lcd_init+0x40>
 2fa:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* repeat last command a third time */
    lcd_e_toggle();
 2fc:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <toggle_e>
 300:	8f ef       	ldi	r24, 0xFF	; 255
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	01 97       	sbiw	r24, 0x01	; 1
 306:	f1 f7       	brne	.-4      	; 0x304 <lcd_init+0x4a>
 308:	00 c0       	rjmp	.+0      	; 0x30a <lcd_init+0x50>
 30a:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN); // LCD_FUNCTION_4BIT_1LINE>>4
 30c:	5c 98       	cbi	0x0b, 4	; 11
    lcd_e_toggle();
 30e:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <toggle_e>
 312:	8f ef       	ldi	r24, 0xFF	; 255
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	01 97       	sbiw	r24, 0x01	; 1
 318:	f1 f7       	brne	.-4      	; 0x316 <lcd_init+0x5c>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <lcd_init+0x62>
 31c:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
    lcd_command(KS0073_4LINES_MODE);
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
    #else
    lcd_command(LCD_FUNCTION_DEFAULT); /* function set: display lines  */
 31e:	88 e2       	ldi	r24, 0x28	; 40
 320:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_command>
    #endif
    lcd_command(LCD_DISP_OFF);     /* display off                  */
 324:	88 e0       	ldi	r24, 0x08	; 8
 326:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_command>
    lcd_clrscr();                  /* display clear                */
 32a:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT); /* set entry mode               */
 32e:	86 e0       	ldi	r24, 0x06	; 6
 330:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_command>
    lcd_command(dispAttr);         /* display/cursor control       */
 334:	8c 2f       	mov	r24, r28
 336:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_command>
}/* lcd_init */
 33a:	cf 91       	pop	r28
 33c:	08 95       	ret

0000033e <main>:
float distance = 0;
uint16_t velocity = 340;

int main(void)
{
	deltatime_init();
 33e:	0e 94 53 00 	call	0xa6	; 0xa6 <deltatime_init>
	lcd_init(LCD_DISP_ON);
 342:	8c e0       	ldi	r24, 0x0C	; 12
 344:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_init>
	lcd_gotoxy(0,0);
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	80 e0       	ldi	r24, 0x00	; 0
 34c:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_gotoxy>
	lcd_puts("Distance:");
 350:	82 e0       	ldi	r24, 0x02	; 2
 352:	91 e0       	ldi	r25, 0x01	; 1
 354:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_puts>
	lcd_gotoxy(10,0);
 358:	60 e0       	ldi	r22, 0x00	; 0
 35a:	8a e0       	ldi	r24, 0x0A	; 10
 35c:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_gotoxy>
	lcd_puts(">4");
 360:	8c e0       	ldi	r24, 0x0C	; 12
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_puts>
	lcd_gotoxy(12,0);
 368:	60 e0       	ldi	r22, 0x00	; 0
 36a:	8c e0       	ldi	r24, 0x0C	; 12
 36c:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_gotoxy>
	lcd_putc('m');
 370:	8d e6       	ldi	r24, 0x6D	; 109
 372:	0e 94 49 01 	call	0x292	; 0x292 <lcd_putc>
		
	TIM2_overflow_1ms();
 376:	e1 eb       	ldi	r30, 0xB1	; 177
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	8b 7f       	andi	r24, 0xFB	; 251
 37e:	80 83       	st	Z, r24
 380:	80 81       	ld	r24, Z
 382:	83 60       	ori	r24, 0x03	; 3
 384:	80 83       	st	Z, r24
	TIM2_overflow_interrupt_enable();
 386:	e0 e7       	ldi	r30, 0x70	; 112
 388:	f0 e0       	ldi	r31, 0x00	; 0
 38a:	80 81       	ld	r24, Z
 38c:	81 60       	ori	r24, 0x01	; 1
 38e:	80 83       	st	Z, r24
	
	sei();
 390:	78 94       	sei
 392:	ff cf       	rjmp	.-2      	; 0x392 <main+0x54>

00000394 <__vector_9>:
    }
	return 0;
}

ISR(TIMER2_OVF_vect)
{
 394:	1f 92       	push	r1
 396:	0f 92       	push	r0
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	0f 92       	push	r0
 39c:	11 24       	eor	r1, r1
 39e:	cf 92       	push	r12
 3a0:	df 92       	push	r13
 3a2:	ef 92       	push	r14
 3a4:	ff 92       	push	r15
 3a6:	0f 93       	push	r16
 3a8:	1f 93       	push	r17
 3aa:	2f 93       	push	r18
 3ac:	3f 93       	push	r19
 3ae:	4f 93       	push	r20
 3b0:	5f 93       	push	r21
 3b2:	6f 93       	push	r22
 3b4:	7f 93       	push	r23
 3b6:	8f 93       	push	r24
 3b8:	9f 93       	push	r25
 3ba:	af 93       	push	r26
 3bc:	bf 93       	push	r27
 3be:	ef 93       	push	r30
 3c0:	ff 93       	push	r31
 3c2:	cf 93       	push	r28
 3c4:	df 93       	push	r29
 3c6:	cd b7       	in	r28, 0x3d	; 61
 3c8:	de b7       	in	r29, 0x3e	; 62
 3ca:	2a 97       	sbiw	r28, 0x0a	; 10
 3cc:	de bf       	out	0x3e, r29	; 62
 3ce:	cd bf       	out	0x3d, r28	; 61
	static uint8_t counter = 0;
	char lcd_string[10] = "";
 3d0:	1a 82       	std	Y+2, r1	; 0x02
 3d2:	19 82       	std	Y+1, r1	; 0x01
 3d4:	fe 01       	movw	r30, r28
 3d6:	33 96       	adiw	r30, 0x03	; 3
 3d8:	88 e0       	ldi	r24, 0x08	; 8
 3da:	df 01       	movw	r26, r30
 3dc:	1d 92       	st	X+, r1
 3de:	8a 95       	dec	r24
 3e0:	e9 f7       	brne	.-6      	; 0x3dc <__vector_9+0x48>
	counter++;
 3e2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <counter.2210>
 3e6:	8f 5f       	subi	r24, 0xFF	; 255
 3e8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <counter.2210>
	
	if (counter > 60)
 3ec:	8d 33       	cpi	r24, 0x3D	; 61
 3ee:	08 f4       	brcc	.+2      	; 0x3f2 <__vector_9+0x5e>
 3f0:	5a c0       	rjmp	.+180    	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
	{
		delta_time = count_deltatime();
 3f2:	0e 94 59 00 	call	0xb2	; 0xb2 <count_deltatime>
 3f6:	8c 01       	movw	r16, r24
 3f8:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <delta_time+0x1>
 3fc:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <delta_time>
		distance = round((velocity*(delta_time/(float)10000))/(float)2);
 400:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
 404:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	0e 94 1a 03 	call	0x634	; 0x634 <__floatunsisf>
 410:	6b 01       	movw	r12, r22
 412:	7c 01       	movw	r14, r24
 414:	b8 01       	movw	r22, r16
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	0e 94 1a 03 	call	0x634	; 0x634 <__floatunsisf>
 41e:	20 e0       	ldi	r18, 0x00	; 0
 420:	30 e4       	ldi	r19, 0x40	; 64
 422:	4c e1       	ldi	r20, 0x1C	; 28
 424:	56 e4       	ldi	r21, 0x46	; 70
 426:	0e 94 72 02 	call	0x4e4	; 0x4e4 <__divsf3>
 42a:	9b 01       	movw	r18, r22
 42c:	ac 01       	movw	r20, r24
 42e:	c7 01       	movw	r24, r14
 430:	b6 01       	movw	r22, r12
 432:	0e 94 a8 03 	call	0x750	; 0x750 <__mulsf3>
 436:	20 e0       	ldi	r18, 0x00	; 0
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	40 e0       	ldi	r20, 0x00	; 0
 43c:	5f e3       	ldi	r21, 0x3F	; 63
 43e:	0e 94 a8 03 	call	0x750	; 0x750 <__mulsf3>
 442:	0e 94 15 04 	call	0x82a	; 0x82a <round>
 446:	60 93 19 01 	sts	0x0119, r22	; 0x800119 <distance>
 44a:	70 93 1a 01 	sts	0x011A, r23	; 0x80011a <distance+0x1>
 44e:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <distance+0x2>
 452:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <distance+0x3>
		counter = 0;
 456:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <counter.2210>
		lcd_gotoxy(10,0);
 45a:	60 e0       	ldi	r22, 0x00	; 0
 45c:	8a e0       	ldi	r24, 0x0A	; 10
 45e:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_gotoxy>
		lcd_puts("   ");
 462:	8f e0       	ldi	r24, 0x0F	; 15
 464:	91 e0       	ldi	r25, 0x01	; 1
 466:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_puts>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 46a:	60 91 19 01 	lds	r22, 0x0119	; 0x800119 <distance>
 46e:	70 91 1a 01 	lds	r23, 0x011A	; 0x80011a <distance+0x1>
 472:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <distance+0x2>
 476:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <distance+0x3>
 47a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__fixsfsi>
 47e:	dc 01       	movw	r26, r24
 480:	cb 01       	movw	r24, r22
 482:	4a e0       	ldi	r20, 0x0A	; 10
 484:	be 01       	movw	r22, r28
 486:	6f 5f       	subi	r22, 0xFF	; 255
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__itoa_ncheck>
		itoa(distance, lcd_string, 10);
		lcd_gotoxy(10,0);
 48e:	60 e0       	ldi	r22, 0x00	; 0
 490:	8a e0       	ldi	r24, 0x0A	; 10
 492:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_gotoxy>
		lcd_puts(lcd_string);
 496:	ce 01       	movw	r24, r28
 498:	01 96       	adiw	r24, 0x01	; 1
 49a:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_puts>
		lcd_gotoxy(12,0);
 49e:	60 e0       	ldi	r22, 0x00	; 0
 4a0:	8c e0       	ldi	r24, 0x0C	; 12
 4a2:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_gotoxy>

	}
}
 4a6:	2a 96       	adiw	r28, 0x0a	; 10
 4a8:	0f b6       	in	r0, 0x3f	; 63
 4aa:	f8 94       	cli
 4ac:	de bf       	out	0x3e, r29	; 62
 4ae:	0f be       	out	0x3f, r0	; 63
 4b0:	cd bf       	out	0x3d, r28	; 61
 4b2:	df 91       	pop	r29
 4b4:	cf 91       	pop	r28
 4b6:	ff 91       	pop	r31
 4b8:	ef 91       	pop	r30
 4ba:	bf 91       	pop	r27
 4bc:	af 91       	pop	r26
 4be:	9f 91       	pop	r25
 4c0:	8f 91       	pop	r24
 4c2:	7f 91       	pop	r23
 4c4:	6f 91       	pop	r22
 4c6:	5f 91       	pop	r21
 4c8:	4f 91       	pop	r20
 4ca:	3f 91       	pop	r19
 4cc:	2f 91       	pop	r18
 4ce:	1f 91       	pop	r17
 4d0:	0f 91       	pop	r16
 4d2:	ff 90       	pop	r15
 4d4:	ef 90       	pop	r14
 4d6:	df 90       	pop	r13
 4d8:	cf 90       	pop	r12
 4da:	0f 90       	pop	r0
 4dc:	0f be       	out	0x3f, r0	; 63
 4de:	0f 90       	pop	r0
 4e0:	1f 90       	pop	r1
 4e2:	18 95       	reti

000004e4 <__divsf3>:
 4e4:	0e 94 86 02 	call	0x50c	; 0x50c <__divsf3x>
 4e8:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_round>
 4ec:	0e 94 67 03 	call	0x6ce	; 0x6ce <__fp_pscB>
 4f0:	58 f0       	brcs	.+22     	; 0x508 <__divsf3+0x24>
 4f2:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__fp_pscA>
 4f6:	40 f0       	brcs	.+16     	; 0x508 <__divsf3+0x24>
 4f8:	29 f4       	brne	.+10     	; 0x504 <__divsf3+0x20>
 4fa:	5f 3f       	cpi	r21, 0xFF	; 255
 4fc:	29 f0       	breq	.+10     	; 0x508 <__divsf3+0x24>
 4fe:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_inf>
 502:	51 11       	cpse	r21, r1
 504:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_szero>
 508:	0c 94 5d 03 	jmp	0x6ba	; 0x6ba <__fp_nan>

0000050c <__divsf3x>:
 50c:	0e 94 7f 03 	call	0x6fe	; 0x6fe <__fp_split3>
 510:	68 f3       	brcs	.-38     	; 0x4ec <__divsf3+0x8>

00000512 <__divsf3_pse>:
 512:	99 23       	and	r25, r25
 514:	b1 f3       	breq	.-20     	; 0x502 <__divsf3+0x1e>
 516:	55 23       	and	r21, r21
 518:	91 f3       	breq	.-28     	; 0x4fe <__divsf3+0x1a>
 51a:	95 1b       	sub	r25, r21
 51c:	55 0b       	sbc	r21, r21
 51e:	bb 27       	eor	r27, r27
 520:	aa 27       	eor	r26, r26
 522:	62 17       	cp	r22, r18
 524:	73 07       	cpc	r23, r19
 526:	84 07       	cpc	r24, r20
 528:	38 f0       	brcs	.+14     	; 0x538 <__divsf3_pse+0x26>
 52a:	9f 5f       	subi	r25, 0xFF	; 255
 52c:	5f 4f       	sbci	r21, 0xFF	; 255
 52e:	22 0f       	add	r18, r18
 530:	33 1f       	adc	r19, r19
 532:	44 1f       	adc	r20, r20
 534:	aa 1f       	adc	r26, r26
 536:	a9 f3       	breq	.-22     	; 0x522 <__divsf3_pse+0x10>
 538:	35 d0       	rcall	.+106    	; 0x5a4 <__divsf3_pse+0x92>
 53a:	0e 2e       	mov	r0, r30
 53c:	3a f0       	brmi	.+14     	; 0x54c <__divsf3_pse+0x3a>
 53e:	e0 e8       	ldi	r30, 0x80	; 128
 540:	32 d0       	rcall	.+100    	; 0x5a6 <__divsf3_pse+0x94>
 542:	91 50       	subi	r25, 0x01	; 1
 544:	50 40       	sbci	r21, 0x00	; 0
 546:	e6 95       	lsr	r30
 548:	00 1c       	adc	r0, r0
 54a:	ca f7       	brpl	.-14     	; 0x53e <__divsf3_pse+0x2c>
 54c:	2b d0       	rcall	.+86     	; 0x5a4 <__divsf3_pse+0x92>
 54e:	fe 2f       	mov	r31, r30
 550:	29 d0       	rcall	.+82     	; 0x5a4 <__divsf3_pse+0x92>
 552:	66 0f       	add	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	bb 1f       	adc	r27, r27
 55a:	26 17       	cp	r18, r22
 55c:	37 07       	cpc	r19, r23
 55e:	48 07       	cpc	r20, r24
 560:	ab 07       	cpc	r26, r27
 562:	b0 e8       	ldi	r27, 0x80	; 128
 564:	09 f0       	breq	.+2      	; 0x568 <__divsf3_pse+0x56>
 566:	bb 0b       	sbc	r27, r27
 568:	80 2d       	mov	r24, r0
 56a:	bf 01       	movw	r22, r30
 56c:	ff 27       	eor	r31, r31
 56e:	93 58       	subi	r25, 0x83	; 131
 570:	5f 4f       	sbci	r21, 0xFF	; 255
 572:	3a f0       	brmi	.+14     	; 0x582 <__divsf3_pse+0x70>
 574:	9e 3f       	cpi	r25, 0xFE	; 254
 576:	51 05       	cpc	r21, r1
 578:	78 f0       	brcs	.+30     	; 0x598 <__divsf3_pse+0x86>
 57a:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_inf>
 57e:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_szero>
 582:	5f 3f       	cpi	r21, 0xFF	; 255
 584:	e4 f3       	brlt	.-8      	; 0x57e <__divsf3_pse+0x6c>
 586:	98 3e       	cpi	r25, 0xE8	; 232
 588:	d4 f3       	brlt	.-12     	; 0x57e <__divsf3_pse+0x6c>
 58a:	86 95       	lsr	r24
 58c:	77 95       	ror	r23
 58e:	67 95       	ror	r22
 590:	b7 95       	ror	r27
 592:	f7 95       	ror	r31
 594:	9f 5f       	subi	r25, 0xFF	; 255
 596:	c9 f7       	brne	.-14     	; 0x58a <__divsf3_pse+0x78>
 598:	88 0f       	add	r24, r24
 59a:	91 1d       	adc	r25, r1
 59c:	96 95       	lsr	r25
 59e:	87 95       	ror	r24
 5a0:	97 f9       	bld	r25, 7
 5a2:	08 95       	ret
 5a4:	e1 e0       	ldi	r30, 0x01	; 1
 5a6:	66 0f       	add	r22, r22
 5a8:	77 1f       	adc	r23, r23
 5aa:	88 1f       	adc	r24, r24
 5ac:	bb 1f       	adc	r27, r27
 5ae:	62 17       	cp	r22, r18
 5b0:	73 07       	cpc	r23, r19
 5b2:	84 07       	cpc	r24, r20
 5b4:	ba 07       	cpc	r27, r26
 5b6:	20 f0       	brcs	.+8      	; 0x5c0 <__divsf3_pse+0xae>
 5b8:	62 1b       	sub	r22, r18
 5ba:	73 0b       	sbc	r23, r19
 5bc:	84 0b       	sbc	r24, r20
 5be:	ba 0b       	sbc	r27, r26
 5c0:	ee 1f       	adc	r30, r30
 5c2:	88 f7       	brcc	.-30     	; 0x5a6 <__divsf3_pse+0x94>
 5c4:	e0 95       	com	r30
 5c6:	08 95       	ret

000005c8 <__fixsfsi>:
 5c8:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__fixunssfsi>
 5cc:	68 94       	set
 5ce:	b1 11       	cpse	r27, r1
 5d0:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_szero>
 5d4:	08 95       	ret

000005d6 <__fixunssfsi>:
 5d6:	0e 94 87 03 	call	0x70e	; 0x70e <__fp_splitA>
 5da:	88 f0       	brcs	.+34     	; 0x5fe <__fixunssfsi+0x28>
 5dc:	9f 57       	subi	r25, 0x7F	; 127
 5de:	98 f0       	brcs	.+38     	; 0x606 <__fixunssfsi+0x30>
 5e0:	b9 2f       	mov	r27, r25
 5e2:	99 27       	eor	r25, r25
 5e4:	b7 51       	subi	r27, 0x17	; 23
 5e6:	b0 f0       	brcs	.+44     	; 0x614 <__fixunssfsi+0x3e>
 5e8:	e1 f0       	breq	.+56     	; 0x622 <__fixunssfsi+0x4c>
 5ea:	66 0f       	add	r22, r22
 5ec:	77 1f       	adc	r23, r23
 5ee:	88 1f       	adc	r24, r24
 5f0:	99 1f       	adc	r25, r25
 5f2:	1a f0       	brmi	.+6      	; 0x5fa <__fixunssfsi+0x24>
 5f4:	ba 95       	dec	r27
 5f6:	c9 f7       	brne	.-14     	; 0x5ea <__fixunssfsi+0x14>
 5f8:	14 c0       	rjmp	.+40     	; 0x622 <__fixunssfsi+0x4c>
 5fa:	b1 30       	cpi	r27, 0x01	; 1
 5fc:	91 f0       	breq	.+36     	; 0x622 <__fixunssfsi+0x4c>
 5fe:	0e 94 a1 03 	call	0x742	; 0x742 <__fp_zero>
 602:	b1 e0       	ldi	r27, 0x01	; 1
 604:	08 95       	ret
 606:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_zero>
 60a:	67 2f       	mov	r22, r23
 60c:	78 2f       	mov	r23, r24
 60e:	88 27       	eor	r24, r24
 610:	b8 5f       	subi	r27, 0xF8	; 248
 612:	39 f0       	breq	.+14     	; 0x622 <__fixunssfsi+0x4c>
 614:	b9 3f       	cpi	r27, 0xF9	; 249
 616:	cc f3       	brlt	.-14     	; 0x60a <__fixunssfsi+0x34>
 618:	86 95       	lsr	r24
 61a:	77 95       	ror	r23
 61c:	67 95       	ror	r22
 61e:	b3 95       	inc	r27
 620:	d9 f7       	brne	.-10     	; 0x618 <__fixunssfsi+0x42>
 622:	3e f4       	brtc	.+14     	; 0x632 <__fixunssfsi+0x5c>
 624:	90 95       	com	r25
 626:	80 95       	com	r24
 628:	70 95       	com	r23
 62a:	61 95       	neg	r22
 62c:	7f 4f       	sbci	r23, 0xFF	; 255
 62e:	8f 4f       	sbci	r24, 0xFF	; 255
 630:	9f 4f       	sbci	r25, 0xFF	; 255
 632:	08 95       	ret

00000634 <__floatunsisf>:
 634:	e8 94       	clt
 636:	09 c0       	rjmp	.+18     	; 0x64a <__floatsisf+0x12>

00000638 <__floatsisf>:
 638:	97 fb       	bst	r25, 7
 63a:	3e f4       	brtc	.+14     	; 0x64a <__floatsisf+0x12>
 63c:	90 95       	com	r25
 63e:	80 95       	com	r24
 640:	70 95       	com	r23
 642:	61 95       	neg	r22
 644:	7f 4f       	sbci	r23, 0xFF	; 255
 646:	8f 4f       	sbci	r24, 0xFF	; 255
 648:	9f 4f       	sbci	r25, 0xFF	; 255
 64a:	99 23       	and	r25, r25
 64c:	a9 f0       	breq	.+42     	; 0x678 <__floatsisf+0x40>
 64e:	f9 2f       	mov	r31, r25
 650:	96 e9       	ldi	r25, 0x96	; 150
 652:	bb 27       	eor	r27, r27
 654:	93 95       	inc	r25
 656:	f6 95       	lsr	r31
 658:	87 95       	ror	r24
 65a:	77 95       	ror	r23
 65c:	67 95       	ror	r22
 65e:	b7 95       	ror	r27
 660:	f1 11       	cpse	r31, r1
 662:	f8 cf       	rjmp	.-16     	; 0x654 <__floatsisf+0x1c>
 664:	fa f4       	brpl	.+62     	; 0x6a4 <__floatsisf+0x6c>
 666:	bb 0f       	add	r27, r27
 668:	11 f4       	brne	.+4      	; 0x66e <__floatsisf+0x36>
 66a:	60 ff       	sbrs	r22, 0
 66c:	1b c0       	rjmp	.+54     	; 0x6a4 <__floatsisf+0x6c>
 66e:	6f 5f       	subi	r22, 0xFF	; 255
 670:	7f 4f       	sbci	r23, 0xFF	; 255
 672:	8f 4f       	sbci	r24, 0xFF	; 255
 674:	9f 4f       	sbci	r25, 0xFF	; 255
 676:	16 c0       	rjmp	.+44     	; 0x6a4 <__floatsisf+0x6c>
 678:	88 23       	and	r24, r24
 67a:	11 f0       	breq	.+4      	; 0x680 <__floatsisf+0x48>
 67c:	96 e9       	ldi	r25, 0x96	; 150
 67e:	11 c0       	rjmp	.+34     	; 0x6a2 <__floatsisf+0x6a>
 680:	77 23       	and	r23, r23
 682:	21 f0       	breq	.+8      	; 0x68c <__floatsisf+0x54>
 684:	9e e8       	ldi	r25, 0x8E	; 142
 686:	87 2f       	mov	r24, r23
 688:	76 2f       	mov	r23, r22
 68a:	05 c0       	rjmp	.+10     	; 0x696 <__floatsisf+0x5e>
 68c:	66 23       	and	r22, r22
 68e:	71 f0       	breq	.+28     	; 0x6ac <__floatsisf+0x74>
 690:	96 e8       	ldi	r25, 0x86	; 134
 692:	86 2f       	mov	r24, r22
 694:	70 e0       	ldi	r23, 0x00	; 0
 696:	60 e0       	ldi	r22, 0x00	; 0
 698:	2a f0       	brmi	.+10     	; 0x6a4 <__floatsisf+0x6c>
 69a:	9a 95       	dec	r25
 69c:	66 0f       	add	r22, r22
 69e:	77 1f       	adc	r23, r23
 6a0:	88 1f       	adc	r24, r24
 6a2:	da f7       	brpl	.-10     	; 0x69a <__floatsisf+0x62>
 6a4:	88 0f       	add	r24, r24
 6a6:	96 95       	lsr	r25
 6a8:	87 95       	ror	r24
 6aa:	97 f9       	bld	r25, 7
 6ac:	08 95       	ret

000006ae <__fp_inf>:
 6ae:	97 f9       	bld	r25, 7
 6b0:	9f 67       	ori	r25, 0x7F	; 127
 6b2:	80 e8       	ldi	r24, 0x80	; 128
 6b4:	70 e0       	ldi	r23, 0x00	; 0
 6b6:	60 e0       	ldi	r22, 0x00	; 0
 6b8:	08 95       	ret

000006ba <__fp_nan>:
 6ba:	9f ef       	ldi	r25, 0xFF	; 255
 6bc:	80 ec       	ldi	r24, 0xC0	; 192
 6be:	08 95       	ret

000006c0 <__fp_pscA>:
 6c0:	00 24       	eor	r0, r0
 6c2:	0a 94       	dec	r0
 6c4:	16 16       	cp	r1, r22
 6c6:	17 06       	cpc	r1, r23
 6c8:	18 06       	cpc	r1, r24
 6ca:	09 06       	cpc	r0, r25
 6cc:	08 95       	ret

000006ce <__fp_pscB>:
 6ce:	00 24       	eor	r0, r0
 6d0:	0a 94       	dec	r0
 6d2:	12 16       	cp	r1, r18
 6d4:	13 06       	cpc	r1, r19
 6d6:	14 06       	cpc	r1, r20
 6d8:	05 06       	cpc	r0, r21
 6da:	08 95       	ret

000006dc <__fp_round>:
 6dc:	09 2e       	mov	r0, r25
 6de:	03 94       	inc	r0
 6e0:	00 0c       	add	r0, r0
 6e2:	11 f4       	brne	.+4      	; 0x6e8 <__fp_round+0xc>
 6e4:	88 23       	and	r24, r24
 6e6:	52 f0       	brmi	.+20     	; 0x6fc <__fp_round+0x20>
 6e8:	bb 0f       	add	r27, r27
 6ea:	40 f4       	brcc	.+16     	; 0x6fc <__fp_round+0x20>
 6ec:	bf 2b       	or	r27, r31
 6ee:	11 f4       	brne	.+4      	; 0x6f4 <__fp_round+0x18>
 6f0:	60 ff       	sbrs	r22, 0
 6f2:	04 c0       	rjmp	.+8      	; 0x6fc <__fp_round+0x20>
 6f4:	6f 5f       	subi	r22, 0xFF	; 255
 6f6:	7f 4f       	sbci	r23, 0xFF	; 255
 6f8:	8f 4f       	sbci	r24, 0xFF	; 255
 6fa:	9f 4f       	sbci	r25, 0xFF	; 255
 6fc:	08 95       	ret

000006fe <__fp_split3>:
 6fe:	57 fd       	sbrc	r21, 7
 700:	90 58       	subi	r25, 0x80	; 128
 702:	44 0f       	add	r20, r20
 704:	55 1f       	adc	r21, r21
 706:	59 f0       	breq	.+22     	; 0x71e <__fp_splitA+0x10>
 708:	5f 3f       	cpi	r21, 0xFF	; 255
 70a:	71 f0       	breq	.+28     	; 0x728 <__fp_splitA+0x1a>
 70c:	47 95       	ror	r20

0000070e <__fp_splitA>:
 70e:	88 0f       	add	r24, r24
 710:	97 fb       	bst	r25, 7
 712:	99 1f       	adc	r25, r25
 714:	61 f0       	breq	.+24     	; 0x72e <__fp_splitA+0x20>
 716:	9f 3f       	cpi	r25, 0xFF	; 255
 718:	79 f0       	breq	.+30     	; 0x738 <__fp_splitA+0x2a>
 71a:	87 95       	ror	r24
 71c:	08 95       	ret
 71e:	12 16       	cp	r1, r18
 720:	13 06       	cpc	r1, r19
 722:	14 06       	cpc	r1, r20
 724:	55 1f       	adc	r21, r21
 726:	f2 cf       	rjmp	.-28     	; 0x70c <__fp_split3+0xe>
 728:	46 95       	lsr	r20
 72a:	f1 df       	rcall	.-30     	; 0x70e <__fp_splitA>
 72c:	08 c0       	rjmp	.+16     	; 0x73e <__fp_splitA+0x30>
 72e:	16 16       	cp	r1, r22
 730:	17 06       	cpc	r1, r23
 732:	18 06       	cpc	r1, r24
 734:	99 1f       	adc	r25, r25
 736:	f1 cf       	rjmp	.-30     	; 0x71a <__fp_splitA+0xc>
 738:	86 95       	lsr	r24
 73a:	71 05       	cpc	r23, r1
 73c:	61 05       	cpc	r22, r1
 73e:	08 94       	sec
 740:	08 95       	ret

00000742 <__fp_zero>:
 742:	e8 94       	clt

00000744 <__fp_szero>:
 744:	bb 27       	eor	r27, r27
 746:	66 27       	eor	r22, r22
 748:	77 27       	eor	r23, r23
 74a:	cb 01       	movw	r24, r22
 74c:	97 f9       	bld	r25, 7
 74e:	08 95       	ret

00000750 <__mulsf3>:
 750:	0e 94 bb 03 	call	0x776	; 0x776 <__mulsf3x>
 754:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_round>
 758:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__fp_pscA>
 75c:	38 f0       	brcs	.+14     	; 0x76c <__mulsf3+0x1c>
 75e:	0e 94 67 03 	call	0x6ce	; 0x6ce <__fp_pscB>
 762:	20 f0       	brcs	.+8      	; 0x76c <__mulsf3+0x1c>
 764:	95 23       	and	r25, r21
 766:	11 f0       	breq	.+4      	; 0x76c <__mulsf3+0x1c>
 768:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_inf>
 76c:	0c 94 5d 03 	jmp	0x6ba	; 0x6ba <__fp_nan>
 770:	11 24       	eor	r1, r1
 772:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_szero>

00000776 <__mulsf3x>:
 776:	0e 94 7f 03 	call	0x6fe	; 0x6fe <__fp_split3>
 77a:	70 f3       	brcs	.-36     	; 0x758 <__mulsf3+0x8>

0000077c <__mulsf3_pse>:
 77c:	95 9f       	mul	r25, r21
 77e:	c1 f3       	breq	.-16     	; 0x770 <__mulsf3+0x20>
 780:	95 0f       	add	r25, r21
 782:	50 e0       	ldi	r21, 0x00	; 0
 784:	55 1f       	adc	r21, r21
 786:	62 9f       	mul	r22, r18
 788:	f0 01       	movw	r30, r0
 78a:	72 9f       	mul	r23, r18
 78c:	bb 27       	eor	r27, r27
 78e:	f0 0d       	add	r31, r0
 790:	b1 1d       	adc	r27, r1
 792:	63 9f       	mul	r22, r19
 794:	aa 27       	eor	r26, r26
 796:	f0 0d       	add	r31, r0
 798:	b1 1d       	adc	r27, r1
 79a:	aa 1f       	adc	r26, r26
 79c:	64 9f       	mul	r22, r20
 79e:	66 27       	eor	r22, r22
 7a0:	b0 0d       	add	r27, r0
 7a2:	a1 1d       	adc	r26, r1
 7a4:	66 1f       	adc	r22, r22
 7a6:	82 9f       	mul	r24, r18
 7a8:	22 27       	eor	r18, r18
 7aa:	b0 0d       	add	r27, r0
 7ac:	a1 1d       	adc	r26, r1
 7ae:	62 1f       	adc	r22, r18
 7b0:	73 9f       	mul	r23, r19
 7b2:	b0 0d       	add	r27, r0
 7b4:	a1 1d       	adc	r26, r1
 7b6:	62 1f       	adc	r22, r18
 7b8:	83 9f       	mul	r24, r19
 7ba:	a0 0d       	add	r26, r0
 7bc:	61 1d       	adc	r22, r1
 7be:	22 1f       	adc	r18, r18
 7c0:	74 9f       	mul	r23, r20
 7c2:	33 27       	eor	r19, r19
 7c4:	a0 0d       	add	r26, r0
 7c6:	61 1d       	adc	r22, r1
 7c8:	23 1f       	adc	r18, r19
 7ca:	84 9f       	mul	r24, r20
 7cc:	60 0d       	add	r22, r0
 7ce:	21 1d       	adc	r18, r1
 7d0:	82 2f       	mov	r24, r18
 7d2:	76 2f       	mov	r23, r22
 7d4:	6a 2f       	mov	r22, r26
 7d6:	11 24       	eor	r1, r1
 7d8:	9f 57       	subi	r25, 0x7F	; 127
 7da:	50 40       	sbci	r21, 0x00	; 0
 7dc:	9a f0       	brmi	.+38     	; 0x804 <__mulsf3_pse+0x88>
 7de:	f1 f0       	breq	.+60     	; 0x81c <__mulsf3_pse+0xa0>
 7e0:	88 23       	and	r24, r24
 7e2:	4a f0       	brmi	.+18     	; 0x7f6 <__mulsf3_pse+0x7a>
 7e4:	ee 0f       	add	r30, r30
 7e6:	ff 1f       	adc	r31, r31
 7e8:	bb 1f       	adc	r27, r27
 7ea:	66 1f       	adc	r22, r22
 7ec:	77 1f       	adc	r23, r23
 7ee:	88 1f       	adc	r24, r24
 7f0:	91 50       	subi	r25, 0x01	; 1
 7f2:	50 40       	sbci	r21, 0x00	; 0
 7f4:	a9 f7       	brne	.-22     	; 0x7e0 <__mulsf3_pse+0x64>
 7f6:	9e 3f       	cpi	r25, 0xFE	; 254
 7f8:	51 05       	cpc	r21, r1
 7fa:	80 f0       	brcs	.+32     	; 0x81c <__mulsf3_pse+0xa0>
 7fc:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_inf>
 800:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_szero>
 804:	5f 3f       	cpi	r21, 0xFF	; 255
 806:	e4 f3       	brlt	.-8      	; 0x800 <__mulsf3_pse+0x84>
 808:	98 3e       	cpi	r25, 0xE8	; 232
 80a:	d4 f3       	brlt	.-12     	; 0x800 <__mulsf3_pse+0x84>
 80c:	86 95       	lsr	r24
 80e:	77 95       	ror	r23
 810:	67 95       	ror	r22
 812:	b7 95       	ror	r27
 814:	f7 95       	ror	r31
 816:	e7 95       	ror	r30
 818:	9f 5f       	subi	r25, 0xFF	; 255
 81a:	c1 f7       	brne	.-16     	; 0x80c <__mulsf3_pse+0x90>
 81c:	fe 2b       	or	r31, r30
 81e:	88 0f       	add	r24, r24
 820:	91 1d       	adc	r25, r1
 822:	96 95       	lsr	r25
 824:	87 95       	ror	r24
 826:	97 f9       	bld	r25, 7
 828:	08 95       	ret

0000082a <round>:
 82a:	0e 94 87 03 	call	0x70e	; 0x70e <__fp_splitA>
 82e:	e8 f0       	brcs	.+58     	; 0x86a <round+0x40>
 830:	9e 37       	cpi	r25, 0x7E	; 126
 832:	e8 f0       	brcs	.+58     	; 0x86e <round+0x44>
 834:	96 39       	cpi	r25, 0x96	; 150
 836:	b8 f4       	brcc	.+46     	; 0x866 <round+0x3c>
 838:	9e 38       	cpi	r25, 0x8E	; 142
 83a:	48 f4       	brcc	.+18     	; 0x84e <round+0x24>
 83c:	67 2f       	mov	r22, r23
 83e:	78 2f       	mov	r23, r24
 840:	88 27       	eor	r24, r24
 842:	98 5f       	subi	r25, 0xF8	; 248
 844:	f9 cf       	rjmp	.-14     	; 0x838 <round+0xe>
 846:	86 95       	lsr	r24
 848:	77 95       	ror	r23
 84a:	67 95       	ror	r22
 84c:	93 95       	inc	r25
 84e:	95 39       	cpi	r25, 0x95	; 149
 850:	d0 f3       	brcs	.-12     	; 0x846 <round+0x1c>
 852:	b6 2f       	mov	r27, r22
 854:	b1 70       	andi	r27, 0x01	; 1
 856:	6b 0f       	add	r22, r27
 858:	71 1d       	adc	r23, r1
 85a:	81 1d       	adc	r24, r1
 85c:	20 f4       	brcc	.+8      	; 0x866 <round+0x3c>
 85e:	87 95       	ror	r24
 860:	77 95       	ror	r23
 862:	67 95       	ror	r22
 864:	93 95       	inc	r25
 866:	0c 94 39 04 	jmp	0x872	; 0x872 <__fp_mintl>
 86a:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__fp_mpack>
 86e:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_szero>

00000872 <__fp_mintl>:
 872:	88 23       	and	r24, r24
 874:	71 f4       	brne	.+28     	; 0x892 <__fp_mintl+0x20>
 876:	77 23       	and	r23, r23
 878:	21 f0       	breq	.+8      	; 0x882 <__fp_mintl+0x10>
 87a:	98 50       	subi	r25, 0x08	; 8
 87c:	87 2b       	or	r24, r23
 87e:	76 2f       	mov	r23, r22
 880:	07 c0       	rjmp	.+14     	; 0x890 <__fp_mintl+0x1e>
 882:	66 23       	and	r22, r22
 884:	11 f4       	brne	.+4      	; 0x88a <__fp_mintl+0x18>
 886:	99 27       	eor	r25, r25
 888:	0d c0       	rjmp	.+26     	; 0x8a4 <__fp_mintl+0x32>
 88a:	90 51       	subi	r25, 0x10	; 16
 88c:	86 2b       	or	r24, r22
 88e:	70 e0       	ldi	r23, 0x00	; 0
 890:	60 e0       	ldi	r22, 0x00	; 0
 892:	2a f0       	brmi	.+10     	; 0x89e <__fp_mintl+0x2c>
 894:	9a 95       	dec	r25
 896:	66 0f       	add	r22, r22
 898:	77 1f       	adc	r23, r23
 89a:	88 1f       	adc	r24, r24
 89c:	da f7       	brpl	.-10     	; 0x894 <__fp_mintl+0x22>
 89e:	88 0f       	add	r24, r24
 8a0:	96 95       	lsr	r25
 8a2:	87 95       	ror	r24
 8a4:	97 f9       	bld	r25, 7
 8a6:	08 95       	ret

000008a8 <__fp_mpack>:
 8a8:	9f 3f       	cpi	r25, 0xFF	; 255
 8aa:	31 f0       	breq	.+12     	; 0x8b8 <__fp_mpack_finite+0xc>

000008ac <__fp_mpack_finite>:
 8ac:	91 50       	subi	r25, 0x01	; 1
 8ae:	20 f4       	brcc	.+8      	; 0x8b8 <__fp_mpack_finite+0xc>
 8b0:	87 95       	ror	r24
 8b2:	77 95       	ror	r23
 8b4:	67 95       	ror	r22
 8b6:	b7 95       	ror	r27
 8b8:	88 0f       	add	r24, r24
 8ba:	91 1d       	adc	r25, r1
 8bc:	96 95       	lsr	r25
 8be:	87 95       	ror	r24
 8c0:	97 f9       	bld	r25, 7
 8c2:	08 95       	ret

000008c4 <__itoa_ncheck>:
 8c4:	bb 27       	eor	r27, r27
 8c6:	4a 30       	cpi	r20, 0x0A	; 10
 8c8:	31 f4       	brne	.+12     	; 0x8d6 <__itoa_ncheck+0x12>
 8ca:	99 23       	and	r25, r25
 8cc:	22 f4       	brpl	.+8      	; 0x8d6 <__itoa_ncheck+0x12>
 8ce:	bd e2       	ldi	r27, 0x2D	; 45
 8d0:	90 95       	com	r25
 8d2:	81 95       	neg	r24
 8d4:	9f 4f       	sbci	r25, 0xFF	; 255
 8d6:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__utoa_common>

000008da <__utoa_ncheck>:
 8da:	bb 27       	eor	r27, r27

000008dc <__utoa_common>:
 8dc:	fb 01       	movw	r30, r22
 8de:	55 27       	eor	r21, r21
 8e0:	aa 27       	eor	r26, r26
 8e2:	88 0f       	add	r24, r24
 8e4:	99 1f       	adc	r25, r25
 8e6:	aa 1f       	adc	r26, r26
 8e8:	a4 17       	cp	r26, r20
 8ea:	10 f0       	brcs	.+4      	; 0x8f0 <__utoa_common+0x14>
 8ec:	a4 1b       	sub	r26, r20
 8ee:	83 95       	inc	r24
 8f0:	50 51       	subi	r21, 0x10	; 16
 8f2:	b9 f7       	brne	.-18     	; 0x8e2 <__utoa_common+0x6>
 8f4:	a0 5d       	subi	r26, 0xD0	; 208
 8f6:	aa 33       	cpi	r26, 0x3A	; 58
 8f8:	08 f0       	brcs	.+2      	; 0x8fc <__utoa_common+0x20>
 8fa:	a9 5d       	subi	r26, 0xD9	; 217
 8fc:	a1 93       	st	Z+, r26
 8fe:	00 97       	sbiw	r24, 0x00	; 0
 900:	79 f7       	brne	.-34     	; 0x8e0 <__utoa_common+0x4>
 902:	b1 11       	cpse	r27, r1
 904:	b1 93       	st	Z+, r27
 906:	11 92       	st	Z+, r1
 908:	cb 01       	movw	r24, r22
 90a:	0c 94 87 04 	jmp	0x90e	; 0x90e <strrev>

0000090e <strrev>:
 90e:	dc 01       	movw	r26, r24
 910:	fc 01       	movw	r30, r24
 912:	67 2f       	mov	r22, r23
 914:	71 91       	ld	r23, Z+
 916:	77 23       	and	r23, r23
 918:	e1 f7       	brne	.-8      	; 0x912 <strrev+0x4>
 91a:	32 97       	sbiw	r30, 0x02	; 2
 91c:	04 c0       	rjmp	.+8      	; 0x926 <strrev+0x18>
 91e:	7c 91       	ld	r23, X
 920:	6d 93       	st	X+, r22
 922:	70 83       	st	Z, r23
 924:	62 91       	ld	r22, -Z
 926:	ae 17       	cp	r26, r30
 928:	bf 07       	cpc	r27, r31
 92a:	c8 f3       	brcs	.-14     	; 0x91e <strrev+0x10>
 92c:	08 95       	ret

0000092e <_exit>:
 92e:	f8 94       	cli

00000930 <__stop_program>:
 930:	ff cf       	rjmp	.-2      	; 0x930 <__stop_program>
